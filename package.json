const socket = io();
const form = document.getElementById('message-form');
const input = document.getElementById('message-input');
const fileInput = document.getElementById('file-input');
const messages = document.getElementById('messages');
const emojiPicker = document.getElementById('emoji-picker');

form.addEventListener('submit', (e) => {
    e.preventDefault();
    const message = input.value.trim();
    const file = fileInput.files[0];

    if (message || file) {
        const formData = new FormData();
        if (message) formData.append('message', message);
        if (file) formData.append('file', file);

        fetch('/upload', {
            method: 'POST',
            body: formData
        }).then(() => {
            input.value = '';
            fileInput.value = '';
        });
    }
});

socket.on('message', (data) => {
    const div = document.createElement('div');
    if (data.text) {
        div.textContent = data.text;
    }
    if (data.file) {
        if (data.fileType.startsWith('image/')) {
            const img = document.createElement('img');
            img.src = data.file;
            div.appendChild(img);
        } else if (data.fileType.startsWith('audio/')) {
            const audio = document.createElement('audio');
            audio.src = data.file;
            audio.controls = true;
            div.appendChild(audio);
        }
    }
    messages.appendChild(div);
    messages.scrollTop = messages.scrollHeight;
});

emojiPicker.addEventListener('click', (e) => {
    if (e.target.classList.contains('emoji')) {
        input.value += e.target.dataset.emoji;
    }
});